
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  imagen: 'imagen',
  correo: 'correo',
  contrasenna: 'contrasenna',
  role: 'role',
  ultimaSesion: 'ultimaSesion',
  estado: 'estado',
  idioma: 'idioma'
};

exports.Prisma.NotificacionScalarFieldEnum = {
  id: 'id',
  idRemitente: 'idRemitente',
  idDestinatario: 'idDestinatario',
  tipo: 'tipo',
  leido: 'leido',
  mensaje: 'mensaje',
  fecha: 'fecha'
};

exports.Prisma.TecnicoScalarFieldEnum = {
  id: 'id',
  disponible: 'disponible',
  motivoDisponible: 'motivoDisponible',
  fechaDisponible: 'fechaDisponible',
  carga: 'carga'
};

exports.Prisma.EspecialidadScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion'
};

exports.Prisma.CategoriaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  tiempoMaximoRespuesta: 'tiempoMaximoRespuesta',
  tiempoMaximoSolucion: 'tiempoMaximoSolucion',
  prioridad: 'prioridad'
};

exports.Prisma.EtiquetaScalarFieldEnum = {
  id: 'id',
  idCategoria: 'idCategoria',
  nombre: 'nombre'
};

exports.Prisma.TicketScalarFieldEnum = {
  id: 'id',
  idUsuario: 'idUsuario',
  idEtiqueta: 'idEtiqueta',
  titulo: 'titulo',
  descripcion: 'descripcion',
  fechaCreacion: 'fechaCreacion',
  fechaCierre: 'fechaCierre',
  slaRespusta: 'slaRespusta',
  slaSolucion: 'slaSolucion',
  estado: 'estado'
};

exports.Prisma.HistorialTicketScalarFieldEnum = {
  id: 'id',
  idTicket: 'idTicket',
  idUsuario: 'idUsuario',
  estadoAnterior: 'estadoAnterior',
  estadoNuevo: 'estadoNuevo',
  fecha: 'fecha',
  observacion: 'observacion'
};

exports.Prisma.Ticket_ImagenScalarFieldEnum = {
  id: 'id',
  idHistorial: 'idHistorial',
  imagen: 'imagen',
  url: 'url'
};

exports.Prisma.AsignacionScalarFieldEnum = {
  id: 'id',
  idTicket: 'idTicket',
  idTecnico: 'idTecnico',
  idRegla: 'idRegla',
  fecha: 'fecha',
  puntajePrioridad: 'puntajePrioridad',
  motivo: 'motivo',
  activo: 'activo',
  metodo: 'metodo'
};

exports.Prisma.ValoracionScalarFieldEnum = {
  id: 'id',
  idTicket: 'idTicket',
  idUsuario: 'idUsuario',
  puntaje: 'puntaje',
  comentario: 'comentario',
  fecha: 'fecha'
};

exports.Prisma.Regla_AutotriageScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  idCategoria: 'idCategoria',
  prioridad: 'prioridad',
  carga: 'carga',
  activa: 'activa'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UsuarioOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  imagen: 'imagen',
  correo: 'correo',
  contrasenna: 'contrasenna'
};

exports.Prisma.NotificacionOrderByRelevanceFieldEnum = {
  mensaje: 'mensaje'
};

exports.Prisma.EspecialidadOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  descripcion: 'descripcion'
};

exports.Prisma.CategoriaOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  descripcion: 'descripcion'
};

exports.Prisma.EtiquetaOrderByRelevanceFieldEnum = {
  nombre: 'nombre'
};

exports.Prisma.TicketOrderByRelevanceFieldEnum = {
  titulo: 'titulo',
  descripcion: 'descripcion'
};

exports.Prisma.HistorialTicketOrderByRelevanceFieldEnum = {
  observacion: 'observacion'
};

exports.Prisma.Ticket_ImagenOrderByRelevanceFieldEnum = {
  url: 'url'
};

exports.Prisma.AsignacionOrderByRelevanceFieldEnum = {
  motivo: 'motivo'
};

exports.Prisma.ValoracionOrderByRelevanceFieldEnum = {
  comentario: 'comentario'
};

exports.Prisma.Regla_AutotriageOrderByRelevanceFieldEnum = {
  nombre: 'nombre'
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  TEC: 'TEC',
  ADMIN: 'ADMIN'
};

exports.Idioma = exports.$Enums.Idioma = {
  es: 'es',
  en: 'en'
};

exports.TipoNotificacion = exports.$Enums.TipoNotificacion = {
  asignacion: 'asignacion',
  cambio_estado: 'cambio_estado',
  observacion: 'observacion',
  inicio_sesion: 'inicio_sesion',
  exito: 'exito',
  error: 'error',
  advertencia: 'advertencia',
  info: 'info',
  nuevo: 'nuevo'
};

exports.MotivoDisponible = exports.$Enums.MotivoDisponible = {
  disponible: 'disponible',
  almuerzo: 'almuerzo',
  descanso: 'descanso',
  ausente: 'ausente'
};

exports.Prioridad = exports.$Enums.Prioridad = {
  baja: 'baja',
  media: 'media',
  alta: 'alta'
};

exports.EstadoTicket = exports.$Enums.EstadoTicket = {
  pendiente: 'pendiente',
  asignado: 'asignado',
  en_proceso: 'en_proceso',
  resuelto: 'resuelto',
  cerrado: 'cerrado'
};

exports.MetodoAsignacion = exports.$Enums.MetodoAsignacion = {
  manual: 'manual',
  automatico: 'automatico'
};

exports.Prisma.ModelName = {
  Usuario: 'Usuario',
  Notificacion: 'Notificacion',
  Tecnico: 'Tecnico',
  Especialidad: 'Especialidad',
  Categoria: 'Categoria',
  Etiqueta: 'Etiqueta',
  Ticket: 'Ticket',
  HistorialTicket: 'HistorialTicket',
  Ticket_Imagen: 'Ticket_Imagen',
  Asignacion: 'Asignacion',
  Valoracion: 'Valoracion',
  Regla_Autotriage: 'Regla_Autotriage'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
